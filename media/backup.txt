using System;
using System.Collections.Generic;

namespace DeckOfCards
{
    class Program
    {
        static void Main(string[] args)
        {
            void printWinner(){
                // System.Console.WriteLine(@"__/\\\______________/\\\__/\\\\\\\\\\\__/\\\\\_____/\\\__/\\\\\_____/\\\__/\\\\\\\\\\\\\\\____/\\\\\\\\\_________/\\\____");     
                // System.Console.WriteLine(@"_\/\\\_____________\/\\\_\/////\\\///__\/\\\\\\___\/\\\_\/\\\\\\___\/\\\_\/\\\///////////___/\\\///////\\\_____/\\\\\\\__");            
                // System.Console.WriteLine(@"_\/\\\_____________\/\\\_____\/\\\_____\/\\\/\\\__\/\\\_\/\\\/\\\__\/\\\_\/\\\_____________\/\\\_____\/\\\____/\\\\\\\\\_");           
                // System.Console.WriteLine(@"_\//\\\____/\\\____/\\\______\/\\\_____\/\\\//\\\_\/\\\_\/\\\//\\\_\/\\\_\/\\\\\\\\\\\_____\/\\\\\\\\\\\/____\//\\\\\\\__");          
                // System.Console.WriteLine(@"__\//\\\__/\\\\\__/\\\_______\/\\\_____\/\\\\//\\\\/\\\_\/\\\\//\\\\/\\\_\/\\\///////______\/\\\//////\\\_____\//\\\\\___");         
                // System.Console.WriteLine(@"___\//\\\/\\\/\\\/\\\________\/\\\_____\/\\\_\//\\\/\\\_\/\\\_\//\\\/\\\_\/\\\_____________\/\\\____\//\\\_____\//\\\____");        
                // System.Console.WriteLine(@"____\//\\\\\\//\\\\\_________\/\\\_____\/\\\__\//\\\\\\_\/\\\__\//\\\\\\_\/\\\_____________\/\\\_____\//\\\_____\///_____");       
                // System.Console.WriteLine(@"_____\//\\\__\//\\\_______/\\\\\\\\\\\_\/\\\___\//\\\\\_\/\\\___\//\\\\\_\/\\\\\\\\\\\\\\\_\/\\\______\//\\\_____/\\\____");      
                // System.Console.WriteLine(@"______\///____\///_______\///////////__\///_____\/////__\///_____\/////__\///////////////__\///________\///_____\///_____");

                System.Console.WriteLine(@"_____/\\\\\\\\\\\\_____/\\\\\\\\\_____/\\\\____________/\\\\__/\\\\\\\\\\\\\\\_________________/\\\\\_______/\\\________/\\\__/\\\\\\\\\\\\\\\____/\\\\\\\\\_____        ");
                System.Console.WriteLine(@" ___/\\\//////////____/\\\\\\\\\\\\\__\/\\\\\\________/\\\\\\_\/\\\///////////________________/\\\///\\\____\/\\\_______\/\\\_\/\\\///////////___/\\\///////\\\___       ");
                System.Console.WriteLine(@"  __/\\\______________/\\\/////////\\\_\/\\\//\\\____/\\\//\\\_\/\\\_________________________/\\\/__\///\\\__\//\\\______/\\\__\/\\\_____________\/\\\_____\/\\\___      ");
                System.Console.WriteLine(@"   _\/\\\____/\\\\\\\_\/\\\_______\/\\\_\/\\\\///\\\/\\\/_\/\\\_\/\\\\\\\\\\\________________/\\\______\//\\\__\//\\\____/\\\___\/\\\\\\\\\\\_____\/\\\\\\\\\\\/____     ");
                System.Console.WriteLine(@"    _\/\\\___\/////\\\_\/\\\\\\\\\\\\\\\_\/\\\__\///\\\/___\/\\\_\/\\\///////________________\/\\\_______\/\\\___\//\\\__/\\\____\/\\\///////______\/\\\//////\\\____    ");
                System.Console.WriteLine(@"     _\/\\\_______\/\\\_\/\\\/////////\\\_\/\\\____\///_____\/\\\_\/\\\_______________________\//\\\______/\\\_____\//\\\/\\\_____\/\\\_____________\/\\\____\//\\\___   ");
                System.Console.WriteLine(@"      _\/\\\_______\/\\\_\/\\\_______\/\\\_\/\\\_____________\/\\\_\/\\\________________________\///\\\__/\\\________\//\\\\\______\/\\\_____________\/\\\_____\//\\\__  ");
                System.Console.WriteLine(@"       _\//\\\\\\\\\\\\/__\/\\\_______\/\\\_\/\\\_____________\/\\\_\/\\\\\\\\\\\\\\\______________\///\\\\\/__________\//\\\_______\/\\\\\\\\\\\\\\\_\/\\\______\//\\\_ ");
                System.Console.WriteLine(@"        __\////////////____\///________\///__\///______________\///__\///////////////_________________\/////_____________\///________\///////////////__\///________\///__");
            }

            void printWelcome(){
                System.Console.WriteLine(@" __      __  ____    __       ____     _____            ____        ______  _____       ____     __       ______  ____     __  __   _____   __  __  ______   ");
                System.Console.WriteLine(@"/\ \  __/\ \/\  _`\ /\ \     /\  _`\  /\  __`\  /'\_/`\/\  _`\     /\__  _\/\  __`\    /\  _`\  /\ \     /\  _  \/\  _`\  /\ \/\ \ /\  __`\/\ \/\ \/\__  _\  ");
                System.Console.WriteLine(@"\ \ \/\ \ \ \ \ \L\_\ \ \    \ \ \/\_\\ \ \/\ \/\      \ \ \L\_\   \/_/\ \/\ \ \/\ \   \ \ \L\ \\ \ \    \ \ \L\ \ \ \/\_\\ \ \/'/'\ \ \/\ \ \ \ \ \/_/\ \/  ");
                System.Console.WriteLine(@" \ \ \ \ \ \ \ \  _\L\ \ \  __\ \ \/_/_\ \ \ \ \ \ \__\ \ \  _\L      \ \ \ \ \ \ \ \   \ \  _ <'\ \ \  __\ \  __ \ \ \/_/_\ \ , <  \ \ \ \ \ \ \ \ \ \ \ \  ");
                System.Console.WriteLine(@"  \ \ \_/ \_\ \ \ \L\ \ \ \L\ \\ \ \L\ \\ \ \_\ \ \ \_/\ \ \ \L\ \     \ \ \ \ \ \_\ \   \ \ \L\ \\ \ \L\ \\ \ \/\ \ \ \L\ \\ \ \\`\ \ \ \_\ \ \ \_\ \ \ \ \ ");
                System.Console.WriteLine(@"   \ `\___x___/\ \____/\ \____/ \ \____/ \ \_____\ \_\\ \_\ \____/      \ \_\ \ \_____\   \ \____/ \ \____/ \ \_\ \_\ \____/ \ \_\ \_\\ \_____\ \_____\ \ \_\");
                System.Console.WriteLine(@"    '\/__//__/  \/___/  \/___/   \/___/   \/_____/\/_/ \/_/\/___/        \/_/  \/_____/    \/___/   \/___/   \/_/\/_/\/___/   \/_/\/_/ \/_____/\/_____/  \/_/");
            }

            void printTakeDrink(){
            
            void printTakeTwoDrinks(){
                System.Console.WriteLine();
                System.Console.WriteLine(@" _____  _    _  _______   _______        _____    ____  ____  ___ _   _ _  ______  ");
                System.Console.WriteLine(@"|_   _|/ \  | |/ / ____| |_   _\ \      / / _ \  |  _ \|  _ \|_ _| \ | | |/ / ___| ");
                System.Console.WriteLine(@"  | | / _ \ | ' /|  _|     | |  \ \ /\ / / | | | | | | | |_) || ||  \| | ' /\___ \ ");
                System.Console.WriteLine(@"  | |/ ___ \| . \| |___    | |   \ V  V /| |_| | | |_| |  _ < | || |\  | . \ ___) |");
                System.Console.WriteLine(@"  |_/_/   \_\_|\_\_____|   |_|    \_/\_/  \___/  |____/|_| \_\___|_| \_|_|\_\____/ ");
                System.Console.WriteLine();
            }

            void printSafe(){
                System.Console.WriteLine();
                Console.WriteLine(@" ____    _    _____ _____ _   _   _  ___    ____  ____  ___ _   _ _  __");
                Console.WriteLine(@"/ ___|  / \  |  ___| ____| | | \ | |/ _ \  |  _ \|  _ \|_ _| \ | | |/ /");
                Console.WriteLine(@"\___ \ / _ \ | |_  |  _| | | |  \| | | | | | | | | |_) || ||  \| | ' / ");
                Console.WriteLine(@" ___) / ___ \|  _| | |___|_| | |\  | |_| | | |_| |  _ < | || |\  | . \ ");
                Console.WriteLine(@"|____/_/   \_\_|   |_____(_) |_| \_|\___/  |____/|_| \_\___|_| \_|_|\_\");
                System.Console.WriteLine();
            }

            // System.Console.WriteLine("Welcome to Blackout");
            System.Console.Clear();
            printWelcome();
            System.Console.Write("\n\nHow many players do you have? ");
            int num_players = Convert.ToInt32(Console.ReadLine());
            
            List<Player> list_of_players = new List<Player>();
            
            for(int i = 0; i < num_players; i++){
                System.Console.Write("Enter name for player " + (i+1) + ": ");
                string player_name = Console.ReadLine();
                Player player = new Player(player_name);
                list_of_players.Add(player);
            }

            System.Console.Clear();

            bool winner = false;
            
            while(!winner){

                Deck newDeck = new Deck();
                newDeck.shuffle();

                foreach(var player in list_of_players){
                    player.draw(newDeck);
                    player.draw(newDeck);
                    
                    bool keep_playing = true;
                    bool total_is_even;
                    System.Console.WriteLine("---------------" + player.name + "'s turn---------------");
                    System.Console.WriteLine(player.name + "'s health: " + player.health);
                    
                    System.Console.WriteLine();

                    System.Console.WriteLine("-- Your hand --");
                    foreach(var card in player.hand){
                        System.Console.Write("[" + card.stringVal + " of " + card.suit + "]");
                        // System.Console.WriteLine(player.name + " has " + card.stringVal + " of " + card.suit);
                    }
                    System.Console.WriteLine("\n");                    

                    System.Console.WriteLine("Your total: " + player.total);
                    
                    while(keep_playing){
                        if(player.total % 2 != 0){
                            total_is_even = false;
                            System.Console.WriteLine("Your total is odd!");
                            System.Console.WriteLine("\nPress 'n' to take one drink");
                            System.Console.WriteLine("Or... Press 'y' to grab a new card for a chance to go even and be safe.");
                        } else {
                            total_is_even = true;
                            System.Console.WriteLine("Your total is even!");
                            System.Console.WriteLine("\nPress 'n' to stay safe.");
                            System.Console.WriteLine("Or... Press 'y' to grab a new card for a chance to give out two drinks.");
                            System.Console.WriteLine("If you end up odd though, you take two drinks.");
                        }
                        System.Console.WriteLine("\nDraw another card? (y/n)");
                        string user_input = Console.ReadLine();
                        bool another = false;
                        if(user_input == "y" || user_input == "yes"){
                            // System.Console.Clear();
                            another = true;
                            //continue playing
                            player.draw(newDeck);
                            // System.Console.WriteLine("You drew: " + new_card.stringVal + " of " + new_card.suit);
                            System.Console.WriteLine("-- Your New hand --");
                            System.Console.Write("[");
                            foreach(var card in player.hand){
                                System.Console.Write( card.stringVal + " of " + card.suit + ", ");
                            }
                            System.Console.Write("]");
                            System.Console.WriteLine();
                            System.Console.WriteLine();
                            System.Console.WriteLine("New Total: " + player.total);
                            
                            keep_playing = false;

                        } else {
                            keep_playing = false;
                        }

                        if(player.total % 2 == 0 && total_is_even) {
                            printSafe();
                            System.Console.WriteLine("You can now give out two drinks!");
                            // System.Console.WriteLine("Drink one Drink!");
                            // printTakeDrink();
                        } else if(player.total % 2 == 0){
                            // System.Console.WriteLine("It's your lucky day. No drink for you.");
                            printSafe();
                        } else if(player.total % 2 != 0 && another) {
                            player.health -= 15;
                            System.Console.WriteLine();
                            printTakeTwoDrinks();
                            System.Console.WriteLine("You lost 15 health!");
                        } else {
                            player.health -= 10;
                            // System.Console.WriteLine("Drink! Drink! Drink!");
                            printTakeDrink();
                            System.Console.WriteLine("You lost 10 health!");
                        }
                        System.Console.WriteLine("New health: " + player.health);

                        if(player.health <= 0){
                            System.Console.WriteLine(player.name + " is out of health! Time to finish your drink!");
                            keep_playing = false;
                            winner = true;
                            break;
                        }

                        player.total = 0;
                        player.hand = new List<Card>();
                    }
                }
            }
            printWinner();     
        }
    }

    class Card
    {
        public String stringVal;
        public String suit;
        public int val;

        public Card(String stringVal, String suit, int val){
            this.stringVal = stringVal;
            this.suit = suit;
            this.val = val;
        }
    }

    class Deck
    {
        public List<Card> cards { get; set; }

        public Deck(){
            reset();
        }

        public Card deal(){ 
            // System.Console.WriteLine(cards.Count);
            Card dealt_card = cards[cards.Count-1];
            cards.Remove(dealt_card);
            // System.Console.WriteLine("Dealt a " + dealt_card.stringVal + " of " + dealt_card.suit);
            return dealt_card;
        }

        public void reset()
        {
            cards = new List<Card>();

            string[] suits = {"clubs", "diamonds", "hearts", "spades"};
            string[] strVals = {"Ace","two","three","four","five","six","seven","eight","nine","ten","Jack","Queen","King"};
            
            //For each suit
            foreach(string suit in suits)
            {
                //For each card in each suite
                for(int i = 0; i < 10; i++){
                    Card newCard = new Card(strVals[i], suit, i+1);
                    cards.Add(newCard);
                }
                for(int i = 10; i < strVals.Length; i++){
                    Card newCard = new Card(strVals[i], suit, 10);
                    cards.Add(newCard);
                }
            }
            
            //Printing out all cards
            // foreach(var card in cards){
            //     System.Console.WriteLine(card.stringVal + " of " + card.suit);
            // }
        }

        public void shuffle(){
            Random rand = new Random();
            
            for(int i = cards.Count; i > 0; i--){
                int rand_num = rand.Next(0, cards.Count);
                
                cards.Add(cards[rand_num]);
                cards.Remove(cards[rand_num]);
            }

            // foreach(var card in cards){
            //     System.Console.WriteLine(card.stringVal + " of " + card.suit);
            // }
        }
    }

    class Player
    {
        public String name;
        public List<Card> hand;

        public int health { get; set; } = 100;

        public int total { get; set; }

        public Player(String name){
            this.name = name;
            this.hand = new List<Card>();
        }

        public Card draw(Deck deck){
            Card card = deck.deal();
            hand.Add(card);
            total += card.val;
            // System.Console.WriteLine("Player drew: " + card.stringVal + " of " + card.suit);
            return card;
        }

        public void discard(){
            // System.Console.WriteLine("Hand.Count: " + hand.Count);

            for(int i = 0; i < hand.Count; i++){
                hand.RemoveAt(i);
                // System.Console.WriteLine("removing a card at " + i);
            }
        }
    }
}